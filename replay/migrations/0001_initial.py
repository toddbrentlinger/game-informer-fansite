# Generated by Django 4.0.1 on 2022-09-07 01:35

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shows', '0001_initial'),
        ('people', '0001_initial'),
        ('games', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter article title.', max_length=100)),
                ('datetime', models.DateTimeField(help_text='Enter date and time article was published.')),
                ('content', models.TextField(help_text='Enter main content of article.')),
                ('url', models.URLField(help_text='Enter URL of article.', null=True, verbose_name='URL')),
                ('author', models.ForeignKey(blank=True, help_text='Enter person who authored the article.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='people.person')),
            ],
            options={
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='ReplaySeason',
            fields=[
                ('number', models.SmallIntegerField(help_text='Enter unique number of Replay season.', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, help_text='Enter description for the Replay season.')),
            ],
            options={
                'verbose_name': 'Replay Season',
                'ordering': ['-number'],
            },
        ),
        migrations.CreateModel(
            name='SegmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter title of segment.', max_length=100)),
                ('abbreviation', models.CharField(blank=True, help_text='Enter shortened abbreviation of segment title.', max_length=10)),
                ('description', models.TextField(blank=True, help_text='Enter description of segment.')),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Segment Type',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for this particular segment instance.', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, help_text='Enter description of this segment instance.')),
                ('games', models.ManyToManyField(blank=True, help_text='Enter games played during the segment.', to='games.Game')),
                ('type', models.ForeignKey(help_text='Enter type of segment.', on_delete=django.db.models.deletion.PROTECT, to='replay.segmenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ReplayEpisode',
            fields=[
                ('showepisode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shows.showepisode')),
                ('number', models.SmallIntegerField(help_text='Enter Replay episode number (unofficial episodes use negative numbers).', unique=True)),
                ('article', models.OneToOneField(blank=True, help_text='Enter article for the Replay episode.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='replay.article')),
                ('main_segment_games', models.ManyToManyField(help_text='Enter any games part of the main segment of the Replay episode.', to='games.Game', verbose_name='Main Segment Games')),
                ('other_segments', models.ManyToManyField(blank=True, help_text='Enter other segments for the Replay episode.', to='replay.Segment', verbose_name='Other Segments')),
                ('season', models.ForeignKey(help_text='Enter season of the Replay episode.', on_delete=django.db.models.deletion.CASCADE, to='replay.replayseason', verbose_name='Replay Season')),
            ],
            options={
                'verbose_name': 'Replay Episode',
            },
            bases=('shows.showepisode',),
        ),
    ]
