TODO:

6/29/22

- Save Article.content as JSON object to hold array of strings representing each 
paragraph of article.

- Account for game titles in segments with platform in parentheses at end of game title.

6/25/22

- Data Migration:
Create Game instances from each main_segment_games property of JSON and then 
save 'game_id' to each main_segment_games object before running through each 
episode again to create the ReplayEpisode instance. When get to main_segment_games, 
use 'game_id' to query the already create Game instance before saving it to the 
episode.

|- accounts
|- config
|- fansite
|- games (games/ , games/platforms/ , games/developers/ , )
|- people (people/ , people/staff/ or staff/ , people/guests/ or guests/)
|- replay (replay/ , replay/segments/ , )
|- superreplay (NOTE: Could be inside 'replay' app instead. SuperReplayEpisode 
                and ReplayEpisode can both derive from Episode which has common 
                functionality.)

- games, people, replay, superreplay
Apps that each have page to search/sort/filter each main model of that app.
Can also view detail pages about each entry.

6/22/22

- Remove UUID fields from objects where built-in default 'id' primary key
is adequate. ReplayEpisode, etc.

- Change youtube_id field in YouTubeVideo to just id?

- Add slug field to any model with a detail page. Built-in methods to convert to slug.
Must have unique attribute.

- Add JSON field to ReplayEpisode to hold the original JSON object used to create 
the model instance.

- In data migration script, go through all main segment games first to add 
to the database before going through other segments. Can then as much data 
as possible (title, platform, year released) to find games using IGDB before 
potentially the same games occur in different segments where more data is 
NOT provided.

6/21/22

- Add slug field to Person, SegmentType, ReplayEpisode (or Episode) models used for url routing.
Need to migrate again and incorporate new fields in data migration script.

3/22/22

- ISSUE: Game instances haves wrong release date.
X ISSUE: SegmentType __str__ has produces issues inside Admin site or ReplayEpisode and ReplaySeason
- ISSUE: There is a SegmentType with blank title. Need to re-run data migration after fix.

3/6/22

- Create separate apps for 'replays' and 'superreplays'

-------------------------------------------------------------------------------

Reset PostgreSQL database:

- Delete files in <app-title>/migrations/ except those that start with "__init__"

- Open SQL Shell (psql) and login to database using user, password, and port.
    DROP DATABASE dbname;
    CREATE DATABASE dbname;

- Re-create migrations.
    python manage.py makemigrations
    python manage.py migrate

- Superuser was removed. Must add it again.
    python manage.py createsuperuser

-------------------------------------------------------------------------------

JSON file changes:

.09 - Splatterhouse: Wanpaku Grafitti -> Splatterhouse: Wanpaku Graffiti
  1 - secondSegmentGames: ["Critical Depth, Rogue Trip: Vacation 2012"] -> ["Critical Depth", "Rogue Trip: Vacation 2012"]

-------------------------------------------------------------------------------

- How to account for choices not having an appropriate choice?
Create separate model for the choices where a new one can be added.

- Should Episode.id be 'editable'?

- YouTubeVideo.thumbnails should use a default thumbnail referenced by the pk value. Perhaps it should be 
the first thumbnail instanced added to the database with pk=0

- Runtime AND Airdate in Episode could instead be used in YouTubeVideo.

X Replace PositiveIntegerField with PositiveSmallIntegerField
Small Integer limit is 32767

- Could I use ImageField built-in model for Thumbnail?

- Host/Featuring: For new Featuring entries, check that each Staff is NOT already listed in Host position

App Structure:
- staff
    - DetailView
    - ListView
- game
    - DetailView
    - ListViewp
- replay
    - DetailView
    - ListView
- superreplay
    - DetailView
    - ListView
- testchamber
    - DetailView
    - ListView

- ISSUE: Some models like Game, Staff, etc. are shared between each app. 
Should I just create them in one and import in the others 
OR create a base app to hold any shared models and import them into other apps?
Maybe all apps with shared models should be in combined into single app OR create 
separate app for each of those shared models since they each need their own DetailView 
and ListView also.