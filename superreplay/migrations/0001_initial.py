# Generated by Django 4.0.1 on 2022-07-25 23:21

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('replay', '0002_youtubetag_alter_youtubevideo_youtube_id'),
        ('people', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SuperReplay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Super Replay',
            },
        ),
        migrations.CreateModel(
            name='SuperReplayEpisode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Enter episode title.', max_length=100)),
                ('runtime', models.CharField(blank=True, help_text='Enter episode runtime in format hh:mm:ss.', max_length=10)),
                ('airdate', models.DateField(help_text='Enter original date the episode first aired.')),
                ('headings', models.JSONField(blank=True, help_text='Enter JSON of different headings with key being the heading title and value being the content.', null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('external_links', models.ManyToManyField(blank=True, help_text='Enter any external URL links (NOT including Game Informer article OR YouTube video).', to='replay.ExternalLink', verbose_name='External Links')),
                ('featuring', models.ManyToManyField(blank=True, help_text='Enter people who feature in the episode (NOT including the host).', related_name='%(app_label)s_%(class)s_featuring_related', related_query_name='%(app_label)s_%(class)ss_featuring', to='people.Person')),
                ('host', models.ForeignKey(blank=True, help_text='Enter person who hosts the episode.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_host_related', related_query_name='%(app_label)s_%(class)ss_host', to='people.person')),
                ('super_replay', models.ForeignKey(help_text='Enter Super Replay for this episode.', on_delete=django.db.models.deletion.CASCADE, to='superreplay.superreplay')),
                ('youtube_video', models.OneToOneField(blank=True, help_text='Enter the YouTube video for the episode.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='replay.youtubevideo', verbose_name='YouTube Video')),
            ],
            options={
                'verbose_name': 'Super Replay Episode',
                'ordering': ['airdate'],
                'abstract': False,
            },
        ),
    ]
